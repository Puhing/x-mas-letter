<script type="module">
    import { initializeApp } from 'https://www.gstatic.com/firebasejs/10.4.0/firebase-app.js';
    import { getAnalytics } from 'https://www.gstatic.com/firebasejs/10.4.0/firebase-analytics.js';
    import { getAuth, TwitterAuthProvider, signInWithPopup, GoogleAuthProvider } from 'https://www.gstatic.com/firebasejs/10.4.0/firebase-auth.js';
    import { getFirestore } from 'https://www.gstatic.com/firebasejs/10.4.0/firebase-firestore.js';

    const firebaseConfig = {
        apiKey: '<%= apiKey %>',
        authDomain: '<%= authDomain %>',
        projectId: '<%= projectId %>',
        storageBucket: '<%= storageBucket %>',
        messagingSenderId: '<%= messagingSenderId %>',
        appId: '<%= appId %>',
    };

    // Initialize Firebase
    const app = initializeApp(firebaseConfig);
    const provider = new TwitterAuthProvider();
    const gProvider = new GoogleAuthProvider();
    function loginWithTwitter(callback) {
        const auth = getAuth();
        signInWithPopup(auth, provider)
            .then(result => {
                const credential = TwitterAuthProvider.credentialFromResult(result);
                const token = credential.accessToken;
                const secret = credential.secret;
                // console.log(credential, token);
                const user = result.user;
                console.log(user);
                if (user && user.providerData && user.providerData[0]) {
                    const t = user.providerData[0];
                    callback(t.uid, t.displayName, t.email, "twitter");
                } else {
                    callback(null, null);
                }
            })
            .catch(error => {
                // Handle Errors here.
                const errorCode = error.code;
                const errorMessage = error.message;
                // The email of the user's account used.
                const email = error.customData.email;
                // The AuthCredential type that was used.
                const credential = TwitterAuthProvider.credentialFromError(error);
                console.log('errmsg : ' + errorMessage);
                callback(null, null);
            });
    }
    
    module.loginWithTwitter = loginWithTwitter;
    function loginWithGoogle(callback) {
        const auth = getAuth();
        signInWithPopup(auth, gProvider)
            .then(result => {
                const credential = GoogleAuthProvider.credentialFromResult(result);
                const token = credential.accessToken;
                const user = result.user;
                console.log('User : ', user);
                if (user && user.providerData && user.providerData[0]) {
                    const t = user.providerData[0];
                    callback(t.uid, t.displayName, t.email, "google");
                } else {
                    callback(null, null);
                }
            })
            .catch(error => {
                const errorCode = error.code;
                const errorMessage = error.message;
                console.error('errmsg : ' + errorMessage);
                const email = error.customData && error.customData.email;
                const credential = GoogleAuthProvider.credentialFromError(error);
                callback(null, null);
            });
    }
    module.loginWithGoogle = loginWithGoogle;
</script>
